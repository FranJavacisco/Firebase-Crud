{"version":3,"sources":["store.js"],"names":["_vuex","_interopRequireDefault","require","_firebase","Vuex","Store","state","users","mutations","setUsers","addUser","user","push","deleteUser","id","filter","actions","fetchUsers","_ref","commit","snapshot","regeneratorRuntime","async","_context","prev","next","awrap","db","collection","get","sent","docs","map","doc","_objectSpread","data","stop","_ref2","docRef","_context2","add","_ref3","_context3"],"mappings":"2FACA,IAAAA,MAAAC,uBAAAC,QAAA,SACAC,UAAAD,QAAA,8zBAEe,IAAIE,MAAAA,QAAKC,MAAM,CAC1BC,MAAO,CACHC,MAAO,IAEXC,UAAW,CANfC,SAMe,SANfH,EAAAC,GAQYD,EAAMC,MAAQA,GAElBG,QAJO,SAICJ,EAAOK,GACXL,EAAMC,MAAMK,KAAKD,IAErBE,WAPO,SAOIP,EAAOQ,GACdR,EAAMC,MAAQD,EAAMC,MAAMQ,OAAO,SAAAJ,GAAI,OAAIA,EAAKG,KAAMA,MAG5DE,QAAS,CAdFC,WAcE,SAAAC,GAAA,IAAAC,EAAAC,EAAAb,EAAA,OAAAc,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAdFN,EAcED,EAdFC,OAcEI,EAAAE,KAAA,EAAAJ,mBAAAK,MAbEC,UAAAA,GAAAC,WAAA,SAAAC,OAaF,KAAA,EAbET,EAaFG,EAAAO,KAfiBvB,EAAAa,EAAAW,KAAAC,IAAA,SAAAC,GAAA,OAAAC,cAAA,CAAApB,GAAAmB,EAAAnB,IAAAmB,EAAAE,UAIjBhB,EAAE,WAAAZ,GAWF,KAAA,EAAA,IAAA,MAAA,OAAAgB,EAAAa,WATK7B,QASL,SAAA8B,EATD1B,GASC,IAAAQ,EAAAmB,EAAA,OAAAjB,mBAAAC,MAAA,SAAAiB,GAAA,OAAA,OAAAA,EAAAf,KAAAe,EAAAd,MAAA,KAAA,EAAA,OATalB,EASb8B,EATa9B,OASbgC,EAAAd,KAAA,EAAAJ,mBAAAK,MAXEC,UAAAA,GAAAC,WAAA,SAAAY,IAAA7B,IAWF,KAAA,EAXE2B,EAWFC,EAAAT,KAXEX,EAAA,UAAAe,cAAA,CAIC5B,GAJDgC,EAIcxB,IAAAH,IAOhB,KAAA,EAAA,IAAA,MAAA,OAAA4B,EAAAH,WAXEvB,WAWF,SAAA4B,EAXE3B,GAWF,IAAAK,EAAA,OAAAE,mBAAAC,MAAA,SAAAoB,GAAA,OAAA,OAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,KAAA,EAAA,OAXEN,EAWFsB,EAXEtB,OAWFuB,EAAAjB,KAAA,EAAAJ,mBAAAK,MAXEC,UAAAA,GAAAC,WAAA,SAAAK,IAAAnB,GAAA,UAWF,KAAA,EAHKP,EAAN,aAA0BQ,GAGzB,KAAA,EAAA,IAAA,MAAA,OAAA2B,EAAAN","file":"store.min.js","sourcesContent":["// src/store.js\r\nimport Vuex from 'vuex';\r\nimport { db } from './firebase';\r\n\r\nexport default new Vuex.Store({\r\n    state: {\r\n        users: []\r\n    },\r\n    mutations: {\r\n        setUsers(state, users) {\r\n            state.users = users;\r\n        },\r\n        addUser(state, user) {\r\n            state.users.push(user);\r\n        },\r\n        deleteUser(state, id) {\r\n            state.users = state.users.filter(user => user.id!== id);\r\n        }\r\n    },\r\n    actions: {\r\n        async fetchUsers({ commit }) {\r\n            const snapshot = await db.collection('users').get();\r\n            const users = snapshot.docs.map(doc => ({ id: doc.id,...doc.data() }));\r\n            commit('setUsers', users);\r\n        },\r\n        async addUser({ commit }, user) {\r\n            const docRef = await db.collection('users').add(user);\r\n            commit('addUser', { id: docRef.id,...user });\r\n        },\r\n        async deleteUser({ commit }, id) {\r\n            await db.collection('users').doc(id).delete();\r\n            commit('deleteUser', id);\r\n        }\r\n    }\r\n});"]}